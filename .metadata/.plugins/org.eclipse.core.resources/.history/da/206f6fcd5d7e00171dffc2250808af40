// isr.c

#include	<header.h>
#include	<extern.h>

interrupt void epwm1_isr(void)
{
	GpioDataRegs.GPASET.bit.GPIO6 = 1;

   EPwm1Regs.ETCLR.bit.INT = 1;   
   // Acknowledge this interrupt to receive more interrupts from group 3
   PieCtrlRegs.PIEACK.all = PIEACK_GROUP3;
   GpioDataRegs.GPACLEAR.bit.GPIO6 = 1;
}

interrupt void  adc_isr(void)
{
	GpioDataRegs.GPASET.bit.GPIO8 = 1;

	adc_I_u_phase = AdcResult.ADCRESULT0;
	adc_I_v_phase = AdcResult.ADCRESULT1;
	adc_Vdc		  = AdcResult.ADCRESULT2;
	adc_IGBT_Temp = AdcResult.ADCRESULT3;
	adc_Ex_sensor = AdcResult.ADCRESULT4;

	AdcRegs.ADCINTFLGCLR.bit.ADCINT1 = 1;		//Clear ADCINT1 flag reinitialize for next SOC
	PieCtrlRegs.PIEACK.all = PIEACK_GROUP1;   // Acknowledge interrupt to PIE
	GpioDataRegs.GPACLEAR.bit.GPIO8 = 1;
}
